#include "stdafx.h"
#include "Dumping.h"

MDump mDumps[] = {
		
		//Endere√ßo / bytes
		{ 0x5674D4, {0x55, 0x8B, 0xEC, 0x83, 0xC4, 0xEC, 0x53, 0x33, 0xC0, 0x89, 0x45, 0xEC, 0xB8, 0x2C, 0x70, 0x56, 0x00, 0xE8, 0xC6, 0xFA, 0xE9, 0xFF, 0x8B, 0x1D, 0x98, 0xD8, 0x56, 0x00, 0x33, 0xC0, 0x55, 0x68}}, // Cheat Engine 5.0
		{ 0x55F7F0, {0x55, 0x8b, 0xec, 0x83, 0xc4, 0xf0, 0x53, 0xb8, 0x68, 0xf2, 0x55, 0x00, 0xe8, 0x3b, 0x72, 0xea, 0xff, 0x8b, 0x1d, 0x6c, 0x99, 0x56, 0x00, 0x8b, 0x03, 0xe8, 0xa6, 0xcb, 0xf0, 0xff, 0x8b, 0x03}}, // WarZ - ALL Emulators Cooki[SZ]
		{ 0x0047E000, {00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x8D, 0x40, 0x00, 0x10, 0xF3, 0x40, 0x00, 0x60, 0x39, 0x41, 0x00, 0x24, 0xF6, 0x40, 0x00, 0xEC, 0x25, 0x41, 0x00, 0x14, 0x2D, 0x41, 0x00}}, // Mender DLL Injector
		{ 0x4EC000, {0x84, 0x42, 0xAC, 0x76, 0xF4, 0x70, 0xAD, 0x76, 0x64, 0x32, 0xAF, 0x76, 0xD4, 0x31, 0xAF, 0x76, 0x58, 0x2B, 0xAC, 0x76, 0x70, 0x2B, 0xAC, 0x76, 0x1C, 0x36, 0xAC, 0x76, 0xCA, 0x3F, 0xAC, 0x76}} //AnVir Task
		//! End Blocks
};


bool MCheckDump()
{
	bool bReturn = false;

	HANDLE hProc = CreateToolhelp32Snapshot( TH32CS_SNAPPROCESS, 0 );

	if( hProc != INVALID_HANDLE_VALUE ){
		PROCESSENTRY32 mP32;

		mP32.dwSize = sizeof( mP32 );

		Process32First( hProc, &mP32 );

		do {
		
			HANDLE hProcess = OpenProcess( PROCESS_ALL_ACCESS, false, mP32.th32ProcessID );
			if( hProcess != NULL )
			{
				for( int i = 0; i < ( sizeof(mDumps) / sizeof(MDump) ); i++ )
				{
					unsigned char pBytes[8];
					__w64 unsigned long pBytesRead;

					if( ReadProcessMemory( hProcess, (LPCVOID)mDumps[i].dwAddress, (LPVOID)pBytes, 8, &pBytesRead ) )
					{
						if( pBytesRead == 8 )
						{							
							if( !memcmp( pBytes, mDumps[i].pBytes, 8 ) )
							{
								bReturn = true;
							}
						}
					}
				}

				CloseHandle( hProcess );
			}

		} while( Process32Next( hProc, &mP32 ) );
	}

	CloseHandle( hProc );

	return bReturn;
}
